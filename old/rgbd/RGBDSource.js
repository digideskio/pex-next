// Generated by CoffeeScript 1.6.2
define(function(require) {
  var Platform, RGBDSource, Texture2D, Time;

  Texture2D = require('pex/gl').Texture2D;
  Platform = require('pex/sys').Platform;
  Time = require('pex/utils').Time;
  return RGBDSource = (function() {
    RGBDSource.prototype.playing = true;

    RGBDSource.prototype.seek = 0;

    function RGBDSource(_arg) {
      var gl, _ref,
        _this = this;

      this.image = _arg.image, this.video = _arg.video, this.textureSize = _arg.textureSize, this.depthRect = _arg.depthRect, this.colorRect = _arg.colorRect, this.boundingBox = _arg.boundingBox, this.rotate = _arg.rotate, this.channels = _arg.channels, this.groundLevel = _arg.groundLevel;
      if ((_ref = this.rotate) == null) {
        this.rotate = false;
      }
      this.ready = false;
      if (this.image) {
        this.texture = this.imageTexture = Texture2D.load(this.image, function() {
          return _this.ready = true;
        });
      }
      if (this.video) {
        this.videoTexture = Texture2D.create(200, 200);
        gl = this.videoTexture.gl;
        this.videoTexture.bind();
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
      }
    }

    RGBDSource.prototype.initVideo = function() {
      var _this = this;

      this.videoElem = document.createElement('video');
      this.videoElem.preload = 'auto';
      this.videoElem.type = 'video/webm; codecs="vp8, vorbis"';
      this.videoElem.src = this.video;
      this.videoElem.volume = 0;
      this.videoElem.addEventListener('canplaythrough', (function() {
        _this.ready = true;
        return _this.videoElem.play();
      }), true);
      return this.videoElem.addEventListener('ended', (function() {
        return _this.videoElem.play();
      }), true);
    };

    RGBDSource.prototype.update = function() {
      var gl;

      this.texture = this.imageTexture;
      if (this.video) {
        if (this.playing && !this.videoElem) {
          this.initVideo();
        }
        if (this.playing && this.videoElem.paused) {
          this.videoElem.play();
        }
        if (!this.playing && this.videoElem && !this.videoElem.paused) {
          this.videoElem.pause();
        }
        if (this.playing && this.ready) {
          this.texture = this.videoTexture;
          if (Time.frameNumber % 2 === 0) {
            if (this.videoElem.readyState === this.videoElem.HAVE_ENOUGH_DATA) {
              this.seek = this.videoElem.currentTime;
              if (this.playing) {
                gl = this.texture.gl;
                this.texture.bind();
                gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);
                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.videoElem);
              }
            }
          }
        }
      }
      return this.ready;
    };

    return RGBDSource;

  })();
});
