// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var AxisHelper, Color, Context, LineBuilder, Mesh, ShowColors, Vec3, _ref;

  _ref = require('pex/gl'), Mesh = _ref.Mesh, Context = _ref.Context;
  LineBuilder = require('pex/geom/gen').LineBuilder;
  ShowColors = require('pex/materials').ShowColors;
  Color = require('pex/color').Color;
  Vec3 = require('pex/geom').Vec3;
  return AxisHelper = (function(_super) {
    __extends(AxisHelper, _super);

    function AxisHelper(origin, size) {
      var lineBuilder;

      this.origin = origin;
      this.size = size;
      if (!this.origin) {
        this.origin = new Vec3(0, 0, 0);
      }
      if (!this.size) {
        this.size = 1;
      }
      lineBuilder = new LineBuilder();
      lineBuilder.addLine(this.origin, new Vec3(this.origin.x + this.size, this.origin.y, this.origin.z), Color.Red);
      lineBuilder.addLine(this.origin, new Vec3(this.origin.x, this.origin.y + this.size, this.origin.z), Color.Green);
      lineBuilder.addLine(this.origin, new Vec3(this.origin.x, this.origin.y, this.origin.z + this.size), Color.Blue);
      AxisHelper.__super__.constructor.call(this, lineBuilder, new ShowColors(), {
        useEdges: true,
        primitiveType: Context.currentContext.gl.LINES
      });
    }

    return AxisHelper;

  })(Mesh);
});
