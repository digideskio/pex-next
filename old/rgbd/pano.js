// Generated by CoffeeScript 1.6.2
var Arcball, BoundingBox, Cube, GUI, Mat4, Mesh, PerspectiveCamera, Platform, Rect, SolidColor, Sphere, Test, Texture2D, Textured, Time, Vec2, Vec3, Vec4, hem, pex, _ref, _ref1, _ref2, _ref3, _ref4;

pex = pex || require('./lib/pex');

Platform = pex.sys.Platform;

_ref = pex.scene, PerspectiveCamera = _ref.PerspectiveCamera, Arcball = _ref.Arcball;

GUI = pex.gui.GUI;

_ref1 = pex.geom, Vec2 = _ref1.Vec2, Vec3 = _ref1.Vec3, Vec4 = _ref1.Vec4, Mat4 = _ref1.Mat4, Rect = _ref1.Rect, BoundingBox = _ref1.BoundingBox, hem = _ref1.hem;

_ref2 = pex.materials, SolidColor = _ref2.SolidColor, Textured = _ref2.Textured, Test = _ref2.Test;

_ref3 = pex.gl, Mesh = _ref3.Mesh, Texture2D = _ref3.Texture2D;

Time = pex.utils.Time;

_ref4 = pex.geom.gen, Cube = _ref4.Cube, Sphere = _ref4.Sphere;

GUI = pex.gui.GUI;

pex.require(['materials/PanoramicEnvMap', 'materials/PanoramicSkyBox'], function(PanoramicEnvMap2, PanoramicEnvMap) {
  return pex.sys.Window.create({
    settings: {
      type: '3d',
      fullscreen: Platform.isBrowser
    },
    materialIndex: 0,
    init: function() {
      var geom, geomSky;

      Time.verbose = true;
      this.gui = new GUI(this);
      this.gui.addRadioList('Texture', this, 'materialIndex', [
        {
          name: 'Setup',
          value: 0
        }, {
          name: 'Park',
          value: 1
        }, {
          name: 'Test',
          value: 2
        }
      ]);
      this.framerate(30);
      this.camera = new PerspectiveCamera(60, this.width / this.height, 1, 100);
      this.arcball = new Arcball(this, this.camera, 2);
      geom = hem().fromGeometry(new Cube(0.97)).subdivide().selectRandomFaces(0.259).extrude(0.25).toFlatGeometry();//.subdivide().subdivide().subdivide().toSmoothGeometry();
      geom.addAttrib('texCoords', 'texCoord');
      geom.vertices.forEach(function(v) {
        return geom.texCoords.push(v);
      });
      geomSky = new Sphere(25);
      this.envMaps = [];
      this.envMaps.push(Texture2D.load('assets/PanoViaJG.jpg'));
      this.envMaps.push(Texture2D.load('assets/4230916288_90b1b4f0f6_o2.jpg'));
      this.envMaps.push(Texture2D.load('assets/latlong-cube-test.jpg'));
      this.blob = new Mesh(geom, new PanoramicEnvMap({
        skyBox: 0,
        texture: this.envMaps[0]
      }));
      return this.sphere = new Mesh(geomSky, new PanoramicEnvMap({
        skyBox: 1,
        texture: this.envMaps[0]
      }));
    },
    draw: function() {
      this.gl.clearColor(0, 0, 0, 1);
      this.gl.enable(this.gl.DEPTH_TEST);
      this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);
      this.blob.material.uniforms.eyePos = this.camera.getPosition();
      this.blob.material.uniforms.texture = this.envMaps[this.materialIndex];
      this.sphere.material.uniforms.texture = this.envMaps[this.materialIndex];
      this.blob.rotation.setAxisAngle(new Vec3(0, 1, 0), Time.seconds * 50);
      this.blob.draw(this.camera);
      this.sphere.draw(this.camera);
      return this.gui.draw();
    }
  });
});
