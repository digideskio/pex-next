// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var Mesh, PointSet, SolidColor, Sphere;
  Mesh = require('pex/gl').Mesh;
  Sphere = require('pex/geom/gen').Sphere;
  SolidColor = require('pex/materials').SolidColor;
  return PointSet = (function(_super) {
    __extends(PointSet, _super);

    function PointSet(_arg) {
      this.n = _arg.n, this.material = _arg.material, this.r = _arg.r, this.exp = _arg.exp;
      if (this.n == null) {
        this.n = 1;
      }
      if (this.r == null) {
        this.r = 0.1;
      }
      if (this.material == null) {
        this.material = new SolidColor();
      }
      this.geom = new Sphere(this.r, 6, 6);
      if (this.exp == null) {
        this.exp = function(i) {
          return new Vec3(0, 0, 0);
        };
      }
      PointSet.__super__.constructor.call(this, this.geom, this.material);
    }

    PointSet.prototype.draw = function(camera) {
      var i, p, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.n - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        p = this.exp(i, i / (this.n - 1), this.position);
        this.position = p;
        _results.push(PointSet.__super__.draw.call(this, camera));
      }
      return _results;
    };

    return PointSet;

  })(Mesh);
});
