// Generated by CoffeeScript 1.6.2
define(function(require) {
  var Gene;

  Function.prototype.property = function(prop, desc) {
    return Object.defineProperty(this.prototype, prop, desc);
  };
  return Gene = (function() {
    function Gene(name, value, min, max, options) {
      this.name = name;
      this.value = value;
      this.min = min;
      this.max = max;
      this.options = options || {};
      if (typeof this.options.type === 'undefined') {
        this.options.type = 'float';
      }
      if (typeof this.options.enabled === 'undefined') {
        this.options.enabled = true;
      }
      this.enabled = this.options.enabled;
      this.defaultValue = this.value;
    }

    Gene.property('normalizedValue', {
      get: function() {
        return (this.value - this.min) / (this.max - this.min);
      },
      set: function(value) {
        this.value = this.min + value * (this.max - this.min);
        if (this.type === 'int') {
          return this.value = Math.round(this.value);
        }
      }
    });

    Gene.property('intValue', {
      get: function() {
        return Math.round(this.value);
      }
    });

    return Gene;

  })();
});

/*
//@ sourceMappingURL=Gene.map
*/
