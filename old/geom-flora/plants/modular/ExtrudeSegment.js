// Generated by CoffeeScript 1.6.2
define(function(require) {
  var ExtrudeSegment, MathUtils, Time, _ref;

  _ref = require('pex/utils'), MathUtils = _ref.MathUtils, Time = _ref.Time;
  return ExtrudeSegment = (function() {
    function ExtrudeSegment(distance, startRadius, radius, duration) {
      this.distance = distance != null ? distance : 0.2;
      this.startRadius = startRadius;
      this.radius = radius != null ? radius : 0.2;
      this.duration = duration != null ? duration : 0.25;
      this.faces = [];
      this.progress = 0;
    }

    ExtrudeSegment.prototype.apply = function(hem, face) {
      hem.clearFaceSelection().selectFace(face).extrude(0.0001);
      this.faces.push(face);
      this.normal = face.getNormal();
      return this.vertices = face.getAllVertices();
    };

    ExtrudeSegment.prototype.update = function() {
      var center, d, diff, face, r, v, _i, _len, _ref1, _results;

      d = Time.delta * this.distance / this.duration;
      this.progress += Time.delta / this.duration;
      if (this.progress > 1) {
        this.done = true;
      }
      this.normal.normalize().scale(d);
      face = this.faces[0];
      center = face.getCenter();
      r = this.startRadius + (this.radius - this.startRadius) * this.progress;
      _ref1 = this.vertices;
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        v = _ref1[_i];
        v.position.add(this.normal);
        diff = v.position.dup().sub(center).normalize().scale(r);
        _results.push(v.position.setVec3(center).add(diff));
      }
      return _results;
    };

    return ExtrudeSegment;

  })();
});

/*
//@ sourceMappingURL=ExtrudeSegment.map
*/
