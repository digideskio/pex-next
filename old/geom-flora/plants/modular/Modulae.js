// Generated by CoffeeScript 1.6.2
define(function(require) {
  var FaceSelector, Geometry, Modulae, hem, _ref;

  _ref = require('pex/geom'), Geometry = _ref.Geometry, hem = _ref.hem;
  FaceSelector = require('flora/plants/modular/FaceSelector');
  return Modulae = (function() {
    function Modulae(geom) {
      this.hem = hem().fromGeometry(geom);
      this.modules = [];
      this.moduleQueue = [];
    }

    Modulae.prototype.apply = function(mod) {
      var module, _i, _len, _ref1, _results;

      if (mod instanceof FaceSelector) {
        mod.apply(this.hem, null);
        return this.modules.push(mod);
      } else {
        _ref1 = this.modules;
        _results = [];
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          module = _ref1[_i];
          if (module.faces.length > 0) {
            mod.apply(this.hem, module.faces.shift());
            this.modules.push(mod);
            break;
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      }
    };

    Modulae.prototype.add = function(mod) {
      return this.moduleQueue.push(mod);
    };

    Modulae.prototype.update = function() {
      if (this.modules.length > 0) {
        if (!this.modules[this.modules.length - 1].done && this.modules[this.modules.length - 1].update) {
          this.modules[this.modules.length - 1].update();
          return;
        }
      }
      if (this.moduleQueue.length > 0) {
        return this.apply(this.moduleQueue.shift());
      }
    };

    Modulae.prototype.getGeometry = function() {
      return this.hem.toFlatGeometry();
    };

    Modulae.prototype.getSelectionGeometry = function() {
      var face, g, module, _i, _j, _len, _len1, _ref1, _ref2;

      g = new Geometry({
        vertices: true
      });
      _ref1 = this.modules;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        module = _ref1[_i];
        _ref2 = module.faces;
        for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {
          face = _ref2[_j];
          g.vertices.push(face.getCenter());
        }
      }
      return g;
    };

    return Modulae;

  })();
});

/*
//@ sourceMappingURL=Modulae.map
*/
