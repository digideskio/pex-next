// Generated by CoffeeScript 1.6.2
define(function(require) {
  var LSystem, MathUtils, random, randomElement;

  MathUtils = require('pex/utils').MathUtils;
  randomElement = MathUtils.randomElement;
  random = Math.random;
  return LSystem = (function() {
    function LSystem(axiom, rules) {
      this.axiom = axiom;
      this.rules = rules;
    }

    LSystem.prototype.applyRules = function(input) {
      var matches, rule, _i, _len, _ref;

      console.log('apply', input);
      matches = [];
      _ref = this.rules;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        rule = _ref[_i];
        if (rule.input[0] === input[0] && rule.input[1] > input[1]) {
          return rule.output.map(function(r) {
            if (r[0] === input[0]) {
              return [r[0], input[1] + 1];
            } else {
              return r;
            }
          });
        }
      }
      return [input];
    };

    LSystem.prototype.generate = function(numIterations) {
      var i, input, r, re, result, s, _i, _j, _k, _len, _ref, _ref1;

      input = this.axiom;
      if (numIterations > 0) {
        for (i = _i = 0, _ref = numIterations - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          console.log('i', i, 'input', input);
          result = [];
          for (s = _j = 0, _ref1 = input.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; s = 0 <= _ref1 ? ++_j : --_j) {
            r = this.applyRules(input[s]);
            for (_k = 0, _len = r.length; _k < _len; _k++) {
              re = r[_k];
              console.log('return', re);
              result.push(re);
            }
          }
          input = result;
          console.log('i', i, 'output', input);
        }
      }
      return input;
    };

    return LSystem;

  })();
});

/*
//@ sourceMappingURL=LSystem.map
*/
