// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var Color, Mesh, Plane, PlaneGeom, SolidColor;

  PlaneGeom = require('pex/geom/gen').Plane;
  Mesh = require('pex/gl').Mesh;
  SolidColor = require('pex/materials').SolidColor;
  Color = require('pex/color').Color;
  return Plane = (function(_super) {
    __extends(Plane, _super);

    function Plane(nu, nv) {
      var planeGeom;

      planeGeom = new PlaneGeom(1, 1, nu, nv, 'x', 'z');
      planeGeom.computeEdges();
      Plane.__super__.constructor.call(this, planeGeom, new SolidColor({
        color: new Color(1, 1, 1, 0.5)
      }), {
        useEdges: true
      });
    }

    Plane.prototype.update = function(surface, t) {
      if (t == null) {
        t = 0;
      }
      this.geometry.vertices.forEach(function(v) {
        return v.y = surface["eval"](v.x, v.z, t);
      });
      return this.geometry.vertices.dirty = true;
    };

    return Plane;

  })(Mesh);
});

/*
//@ sourceMappingURL=Plane.map
*/
