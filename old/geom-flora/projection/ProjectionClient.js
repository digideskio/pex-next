// Generated by CoffeeScript 1.6.2
define(function(require) {
  var Config, ProjectionClient;

  Config = require('flora/game/Config');
  return ProjectionClient = (function() {
    function ProjectionClient() {
      this.socket = null;
      this.connected = false;
      this.mode = '';
    }

    ProjectionClient.prototype.init = function() {
      var wsAddress,
        _this = this;

      if (typeof ReconnectingWebSocket !== 'undefined') {
        wsAddress = "ws://" + Config.server.host + ":" + Config.server.port;
        console.log('wsAddress', wsAddress);
        console.log('ProjectionClient.init', wsAddress);
        this.socket = new ReconnectingWebSocket(wsAddress);
        this.socket.onopen = function() {
          console.log('ProjectionClient.onopen', 'connected');
          return _this.connected = true;
        };
        this.socket.onclose = function() {
          console.log('ProjectionClient.onclose', 'disconnected');
          _this.mode = null;
          return _this.connected = false;
        };
        return this.socket.onmessage = function(msg) {
          return _this.onMessage(JSON.parse(msg.data));
        };
      } else {
        return console.log('ProjectionClient.init', 'no web socket found');
      }
    };

    ProjectionClient.prototype.onMessage = function(msg) {
      if (msg.type === 'time') {
        this.mode = msg.mode;
      }
      if (msg.type === 'ping') {
        if (this.onPing) {
          this.onPing(msg.plant);
        }
      }
      if (msg.type === 'genotype') {
        if (this.onGenotype) {
          return this.onGenotype(msg.plant, msg.genotype);
        }
      }
    };

    return ProjectionClient;

  })();
});

/*
//@ sourceMappingURL=ProjectionClient.map
*/
