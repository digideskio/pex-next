// Generated by CoffeeScript 1.6.2
define(function(require) {
  var CameraOrbiter, Vec3, degToRad;

  Vec3 = require('pex/geom').Vec3;
  degToRad = 1 / 180.0 * Math.PI;
  return CameraOrbiter = (function() {
    CameraOrbiter.prototype.target = new Vec3(0, 0, 0);

    function CameraOrbiter(camera, distance, theta, phi) {
      this.camera = camera;
      this.distance = distance != null ? distance : 3;
      this.theta = theta != null ? theta : 0;
      this.phi = phi != null ? phi : 0;
    }

    CameraOrbiter.prototype.evalPos = function(pos, r, theta, phi) {
      pos.x = this.target.x + r * Math.sin(theta * degToRad) * Math.sin(phi * degToRad);
      pos.y = this.target.y + r * Math.cos(theta * degToRad);
      return pos.z = this.target.z + r * Math.sin(theta * degToRad) * Math.cos(phi * degToRad);
    };

    CameraOrbiter.prototype.update = function() {
      var pos;

      pos = this.camera.getPosition();
      this.evalPos(pos, this.distance, this.theta - 90, this.phi - 180);
      return this.camera.setPosition(pos);
    };

    return CameraOrbiter;

  })();
});
